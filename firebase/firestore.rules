// ===============================================================
// üîí Firestore Security Rules ‚Äî DraftClub v1.0
// ===============================================================
// Protecci√≥n de usuarios, publicaciones y otros m√≥dulos
// ===============================================================

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // ===========================================================
    // üë§ USERS ‚Äî cada usuario solo puede modificar su propio doc
    // ===========================================================
    match /users/{uid} {
      allow read: if true; // p√∫blico (los perfiles son visibles)
      allow write: if request.auth != null && request.auth.uid == uid;
    }

    // ===========================================================
    // üì∞ POSTS ‚Äî publicaciones sociales (feed)
    // ===========================================================
    match /posts/{postId} {
      // üîπ Lectura p√∫blica (feed global)
      allow read: if true;

      // üîπ Creaci√≥n o edici√≥n solo por su autor
      allow create, update: if request.auth != null
                            && request.auth.uid == request.resource.data.authorId
                            && request.resource.data.authorId == resource?.data.authorId
                            && request.resource.data.createdAt is timestamp
                            && (request.resource.data.type in ['photo', 'video'])
                            && (request.resource.data.city is string)
                            && (request.resource.data.caption is string)
                            && (request.resource.data.mediaUrls is list);

      // üîπ Eliminaci√≥n solo por el autor
      allow delete: if request.auth != null
                     && resource.data.authorId == request.auth.uid;
    }

    // ===========================================================
    // ‚ù§Ô∏è POST_LIKES ‚Äî cada usuario solo puede dar/quitar like a posts
    // ===========================================================
    match /post_likes/{postId}/likes/{uid} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == uid;
    }

    // ===========================================================
    // üí¨ POST_COMMENTS ‚Äî todos pueden leer; solo logueados pueden comentar
    // ===========================================================
    match /post_comments/{postId}/comments/{commentId} {
      allow read: if true;
      allow create: if request.auth != null
                    && request.resource.data.authorId == request.auth.uid
                    && (request.resource.data.text is string)
                    && (request.resource.data.createdAt is timestamp);
      allow delete: if request.auth != null
                     && resource.data.authorId == request.auth.uid;
    }

    // ===========================================================
    // üö© REPORTS ‚Äî cualquier usuario autenticado puede reportar
    // ===========================================================
    match /reports/{reportId} {
      allow create: if request.auth != null;
      allow read, update, delete: if false; // solo admins (por ahora)
    }

    // ===========================================================
    // ‚öôÔ∏è OTRAS COLECCIONES (rooms, tournaments, etc.)
    // ===========================================================
    match /rooms/{roomId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    match /{document=**} {
      allow read: if false;
      allow write: if false;
    }
  }
}